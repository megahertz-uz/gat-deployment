name: compose-deploy
inputs:
  ssh_private_key: 
    description: "SSH KEY"
    required: true
  username: 
    description: "username"
    required: false
    default: root
  server_host: 
    description: "host"
    required: true
  ssh_port:
    description: "ssh port"
    required: false
    default: 22
  registry_url:
    required: true
  registry_username:
    required: true
  registry_password:
    required: true
  service_name:
    required: true
  environment:
    required: true
  availability_zone:
    required: false
    default: uz-east-1a

runs:
  using: composite
  steps:
    - name: Deploy to remote server
      shell: ash {0}
      run: |
        eval `ssh-agent -s` 
        echo "${{ inputs.ssh_private_key }}" | ssh-add - 
        # prepare
        ssh -o StrictHostKeyChecking=no -p ${{ inputs.ssh_port }} ${{ inputs.username }}@${{ inputs.server_host }} "rm -rf ~/deployment &&
        mkdir -p /data"
        scp -P ${{ inputs.ssh_port }} -r -o "StrictHostKeyChecking=no" $(pwd) ${{ inputs.username }}@${{ inputs.server_host }}:~/deployment
        scp -P ${{ inputs.ssh_port }} -r -o "StrictHostKeyChecking=no" $(pwd)/config ${{ inputs.username }}@${{ inputs.server_host }}:/data
        # deploy
        ssh -o StrictHostKeyChecking=no -p ${{ inputs.ssh_port }} ${{ inputs.username }}@${{ inputs.server_host }} "cd ~/deployment/gat &&
        echo ${{ inputs.registry_password }} | docker login ${{ inputs.registry_url }} --username ${{ inputs.registry_username }} --password-stdin
        docker compose -f backend.docker-compose.yml -f frontend.docker-compose.yml up -d --pull always"