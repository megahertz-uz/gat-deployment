services:
  db:
    image: postgres:16.3-alpine
    restart: always
    shm_size: 256mb
    volumes:
      - app-db-data:/var/lib/postgresql/data/pgdata
    env_file:
      - .env
    ports:
      - "5432:5432"
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD?Variable not set}
      - POSTGRES_USER=${POSTGRES_USER?Variable not set}
      - POSTGRES_DB=${POSTGRES_DB?Variable not set}
    networks:
      - hackathon_network
  
  adminer:
    image: adminer
    restart: always
    ports:
      - "48800:8080"
    networks:
      - hackathon_network

  backend:
    image: registry.onmhz.uz/megahertz/gat/backend:latest
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
      - minio
    env_file:
      - .env
    environment:
      SECRET_KEY: ${SECRET_KEY?Variable not set}
      POSTGRES_SERVER: db
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER?Variable not set}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD?Variable not set}
      REDIS_SERVER: ${REDIS_SERVER}
      REDIS_PORT: ${REDIS_PORT}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    networks:
      - hackathon_network

  redis:
    image: redis:7.0-alpine
    restart: always
    ports:
      - "6379:6379"
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    command: [ "redis-server", "--requirepass", "${REDIS_PASSWORD}", "--save", "60", "1", "--loglevel", "warning" ]
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 256M
        reservations:
          cpus: '0.25'
          memory: 128M
    healthcheck:
      test: [ "CMD", "redis-cli", "-a", "$REDIS_PASSWORD", "ping" ]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - hackathon_network

  minio:
    image: minio/minio
    ports:
      - "9000:9000"
      - '9001:9001'
    healthcheck:
      test: [ "CMD", "mc", "ready", "local" ]
      interval: 5s
      timeout: 5s
      retries: 5
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    volumes:
      - minio_data:/data
    networks:
      - hackathon_network
    command: server --console-address ":9001" /data


volumes:
  minio_data: { }
  app-db-data:

networks:
  hackathon_network:
    driver: bridge
